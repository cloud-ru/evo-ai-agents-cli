package system

import (
	"context"
	"fmt"
	"os"

	"github.com/cloud-ru/evo-ai-agents-cli/internal/di"
	"github.com/cloud-ru/evo-ai-agents-cli/internal/errors"
	"github.com/cloud-ru/evo-ai-agents-cli/internal/ui"
	"github.com/spf13/cobra"
)

var (
	systemOutputFormat string
	systemLimit        int
	systemOffset       int
)

// listCmd represents the list command
var listCmd = &cobra.Command{
	Use:   "list",
	Short: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ —Å–∏—Å—Ç–µ–º –∞–≥–µ–Ω—Ç–æ–≤",
	Long:  "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–∞–≥–∏–Ω–∞—Ü–∏–∏",
	Run: func(cmd *cobra.Command, args []string) {
		ctx := context.Background()

		// –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
		errorHandler := errors.NewHandler()

		// –ü–æ–ª—É—á–∞–µ–º API –∫–ª–∏–µ–Ω—Ç –∏–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
		container := di.GetContainer()
		apiClient, err := container.GetAPI()
		if err != nil {
			appErr := errorHandler.WrapAPIError(err, "API_CLIENT_ERROR", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è API –∫–ª–∏–µ–Ω—Ç–∞")
			appErr = appErr.WithSuggestions(
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: IAM_KEY_ID, IAM_SECRET_KEY, IAM_ENDPOINT",
				"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã: ai-agents-cli auth login",
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API: curl -I $IAM_ENDPOINT",
				"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
				"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
			)
			fmt.Println(errorHandler.HandlePlain(appErr))
			os.Exit(1)
		}

		if systemOutputFormat == "json" {
			// –í—ã–≤–æ–¥–∏–º –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
			systems, err := apiClient.AgentSystems.List(ctx, systemLimit, systemOffset)
			if err != nil {
				appErr := errorHandler.WrapAPIError(err, "SYSTEMS_LIST_FAILED", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∏—Å—Ç–µ–º")
				appErr = appErr.WithSuggestions(
					"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: IAM_KEY_ID, IAM_SECRET_KEY, IAM_ENDPOINT",
					"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã: ai-agents-cli auth login",
					"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API: curl -I $IAM_ENDPOINT",
					"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
					"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
				)
				fmt.Println(errorHandler.HandlePlain(appErr))
				os.Exit(1)
			}

			// –í—ã–≤–æ–¥–∏–º JSON
			fmt.Printf(`{"data":%d,"total":%d}`, len(systems.Data), systems.Total)
			return
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
		if err = ui.ShowAgentSystemsListFromAPI(ctx, systemLimit, systemOffset); err != nil {
			appErr := errorHandler.WrapAPIError(err, "SYSTEMS_TABLE_ERROR", "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å–∏—Å—Ç–µ–º")
			appErr = appErr.WithSuggestions(
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: IAM_KEY_ID, IAM_SECRET_KEY, IAM_ENDPOINT",
				"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã: ai-agents-cli auth login",
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API: curl -I $IAM_ENDPOINT",
				"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
				"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
			)
			fmt.Println(errorHandler.HandlePlain(appErr))
			os.Exit(1)
		}
	},
}

func init() {
	RootCMD.AddCommand(listCmd)

	listCmd.Flags().StringVarP(&systemOutputFormat, "output", "o", "table", "–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ (table, json)")
	listCmd.Flags().IntVarP(&systemLimit, "limit", "l", 20, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏—Å—Ç–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
	listCmd.Flags().IntVarP(&systemOffset, "offset", "", 0, "–°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
}
