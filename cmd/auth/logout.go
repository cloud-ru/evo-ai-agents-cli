package auth

import (
	"fmt"
	"os"

	"github.com/cloud-ru/evo-ai-agents-cli/internal/auth"
	"github.com/cloud-ru/evo-ai-agents-cli/internal/errors"
	"github.com/spf13/cobra"
)

// logoutCmd –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
var logoutCmd = &cobra.Command{
	Use:   "logout",
	Short: "–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã AI Agents",
	Long: `–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã AI Agents.

–£–¥–∞–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ—á–∏—â–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
–ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–Ω–æ–≤–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å 'ai-agents-cli auth login' –¥–ª—è –≤—Ö–æ–¥–∞.

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  ai-agents-cli auth logout`,
	Run: func(cmd *cobra.Command, args []string) {
		// –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
		errorHandler := errors.NewHandler()

		// –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
		credentialsManager := auth.NewCredentialsManager()

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		if !credentialsManager.HasCredentials() {
			fmt.Println("‚ÑπÔ∏è  –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í—ã —É–∂–µ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")
			return
		}

		// –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
		creds, err := credentialsManager.LoadCredentials()
		if err != nil {
			appErr := errorHandler.WrapFileSystemError(err, "CREDENTIALS_LOAD_FAILED", "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
			appErr = appErr.WithSuggestions(
				"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: " + credentialsManager.GetCredentialsPath(),
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É",
				"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
			)
			fmt.Println(errorHandler.HandlePlain(appErr))
			os.Exit(1)
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
		fmt.Printf("üîê –£–¥–∞–ª—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è:\n")
		fmt.Printf("üìß Email: %s\n", creds.UserEmail)
		fmt.Printf("üîë Key ID: %s\n", maskString(creds.IAMKeyID))
		fmt.Printf("üåê Endpoint: %s\n", creds.IAMEndpoint)
		fmt.Printf("‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: %s\n\n", creds.LastLogin)

		// –£–¥–∞–ª—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		if err := credentialsManager.DeleteCredentials(); err != nil {
			appErr := errorHandler.WrapFileSystemError(err, "CREDENTIALS_DELETE_FAILED", "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
			appErr = appErr.WithSuggestions(
				"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: " + credentialsManager.GetCredentialsPath(),
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É",
				"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º",
				"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
			)
			fmt.Println(errorHandler.HandlePlain(appErr))
			os.Exit(1)
		}

		// –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
		os.Unsetenv("IAM_KEY_ID")
		os.Unsetenv("IAM_SECRET_KEY")
		os.Unsetenv("IAM_ENDPOINT")

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		fmt.Println("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã!")
		fmt.Println("üí° –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ai-agents-cli auth login")
	},
}
