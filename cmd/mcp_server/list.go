package mcp_server

import (
	"context"
	"fmt"

	"github.com/cloud-ru/evo-ai-agents-cli/internal/errors"
	"github.com/cloud-ru/evo-ai-agents-cli/internal/ui"
	"github.com/spf13/cobra"
)

var (
	limit  int
	offset int
)

// listCmd represents the list command
var listCmd = &cobra.Command{
	Use:   "list",
	Short: "–°–ø–∏—Å–æ–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤",
	Long: `–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ.

–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å–µ—Ö MCP —Å–µ—Ä–≤–µ—Ä–∞—Ö:
‚Ä¢ ID —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
‚Ä¢ –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é —Ñ–ª–∞–≥–æ–≤ --limit –∏ --offset.

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  ai-agents-cli mcp-servers list
  ai-agents-cli mcp-servers list --limit 10
  ai-agents-cli mcp-servers list --offset 20 --limit 5`,
	Run: func(cmd *cobra.Command, args []string) {
		ctx := context.Background()

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
		if err := ui.CheckTerminalSize(); err != nil {
			errorHandler := errors.NewHandler()
			appErr := errorHandler.WrapUserError(err, "TERMINAL_SIZE_ERROR", "–û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞")
			fmt.Println(errorHandler.HandlePlain(appErr))
			return
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
		if err := ui.ShowMCPServersListFromAPI(ctx, limit, offset); err != nil {
			errorHandler := errors.NewHandler()
			appErr := errorHandler.WrapAPIError(err, "MCP_SERVERS_LIST_FAILED", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤")
			appErr = appErr.WithSuggestions(
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: IAM_KEY_ID, IAM_SECRET_KEY, IAM_ENDPOINT",
				"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã: ai-agents-cli auth login",
				"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API: curl -I $IAM_ENDPOINT",
				"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
				"üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.ru/docs/ai-agents/ug/index?source-platform=Evolution",
			)
			fmt.Println(errorHandler.HandlePlain(appErr))
			return
		}
	},
}

func init() {
	RootCMD.AddCommand(listCmd)

	listCmd.Flags().IntVarP(&limit, "limit", "l", 20, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
	listCmd.Flags().IntVarP(&offset, "offset", "o", 0, "–°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
}
