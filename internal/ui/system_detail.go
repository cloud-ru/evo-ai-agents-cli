package ui

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/lipgloss"
	"github.com/cloud-ru/evo-ai-agents-cli/internal/api"
)

// SystemDetailModel –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–∏—Å—Ç–µ–º—ã –∞–≥–µ–Ω—Ç–æ–≤ —Å —Ç–∞–±–∞–º–∏
type SystemDetailModel struct {
	System *api.AgentSystem
	Tabs   *TabModel
}

// NewSystemDetailModel —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∏—Å—Ç–µ–º—ã –∞–≥–µ–Ω—Ç–æ–≤
func NewSystemDetailModel(system *api.AgentSystem) *SystemDetailModel {
	tabs := []string{
		"üìã –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
		"ü§ñ –ê–≥–µ–Ω—Ç—ã",
		"üß† –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä",
		"‚öôÔ∏è –û–ø—Ü–∏–∏",
		"üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
		"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
		"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è",
		"üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ",
	}

	content := []string{
		formatSystemGeneralInfo(system),
		formatSystemAgents(system),
		formatSystemOrchestrator(system),
		formatSystemOptions(system),
		formatSystemIntegration(system),
		formatSystemStatistics(system),
		formatSystemUpdates(system),
		formatSystemScaling(system),
	}

	return &SystemDetailModel{
		System: system,
		Tabs:   NewTabModel(tabs, content),
	}
}

// Render –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ –∞–≥–µ–Ω—Ç–æ–≤
func (m *SystemDetailModel) Render() string {
	header := fmt.Sprintf("üèóÔ∏è –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: %s", m.System.Name)
	headerStyle := lipgloss.NewStyle().
		Bold(true).
		Foreground(lipgloss.Color("39")).
		MarginBottom(1)

	return headerStyle.Render(header) + "\n" + m.Tabs.Render()
}

// formatSystemGeneralInfo —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –∞–≥–µ–Ω—Ç–æ–≤
func formatSystemGeneralInfo(system *api.AgentSystem) string {
	// –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
	leftStyle := lipgloss.NewStyle().
		Width(50).
		Align(lipgloss.Left)

	rightStyle := lipgloss.NewStyle().
		Width(50).
		Align(lipgloss.Right)

	centerStyle := lipgloss.NewStyle().
		Width(100).
		Align(lipgloss.Center).
		MarginBottom(1)

	// –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	leftInfo := strings.Builder{}
	leftInfo.WriteString(fmt.Sprintf("üÜî ID: %s\n", system.ID))
	leftInfo.WriteString(fmt.Sprintf("üìù –ù–∞–∑–≤–∞–Ω–∏–µ: %s\n", system.Name))
	leftInfo.WriteString(fmt.Sprintf("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: %s\n", getDescription(system.Description)))
	leftInfo.WriteString(fmt.Sprintf("üìä –°—Ç–∞—Ç—É—Å: %s\n", FormatSystemStatus(system.Status)))

	// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Project ID
	if system.ProjectID != "" {
		leftInfo.WriteString(fmt.Sprintf("üè¢ –ü—Ä–æ–µ–∫—Ç: %s\n", system.ProjectID))
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –∏–Ω—Å—Ç–∞–Ω—Å–∞
	if system.InstanceType.ID != "" {
		leftInfo.WriteString(fmt.Sprintf("üíª –ò–Ω—Å—Ç–∞–Ω—Å: %s (%s)\n", system.InstanceType.Name, system.InstanceType.SKUCode))
	}

	// –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
	rightInfo := strings.Builder{}
	rightInfo.WriteString(fmt.Sprintf("üìÖ –°–æ–∑–¥–∞–Ω: %s\n", system.CreatedAt.Format("02.01.2006 15:04:05")))
	rightInfo.WriteString(fmt.Sprintf("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: %s\n", system.UpdatedAt.Format("02.01.2006 15:04:05")))

	if system.CreatedBy != "" {
		rightInfo.WriteString(fmt.Sprintf("üë§ –°–æ–∑–¥–∞–ª: %s\n", system.CreatedBy))
	}
	if system.UpdatedBy != "" {
		rightInfo.WriteString(fmt.Sprintf("‚úèÔ∏è –ò–∑–º–µ–Ω–∏–ª: %s\n", system.UpdatedBy))
	}

	// –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è - URL –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	centerInfo := strings.Builder{}
	if system.PublicURL != "" {
		centerInfo.WriteString(fmt.Sprintf("üåê –ü—É–±–ª–∏—á–Ω—ã–π URL: %s\n", system.PublicURL))
	}

	// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
	var result strings.Builder
	result.WriteString(centerStyle.Render(centerInfo.String()))

	// –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
	leftContent := leftStyle.Render(leftInfo.String())
	rightContent := rightStyle.Render(rightInfo.String())

	result.WriteString(lipgloss.JoinHorizontal(lipgloss.Top, leftContent, rightContent))

	return result.String()
}

// formatSystemAgents —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≥–µ–Ω—Ç–∞—Ö –≤ —Å–∏—Å—Ç–µ–º–µ
func formatSystemAgents(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("ü§ñ –ê–≥–µ–Ω—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:\n\n")

	if len(system.Agents) > 0 {
		for i, agent := range system.Agents {
			info.WriteString(fmt.Sprintf("ü§ñ %d. %s\n", i+1, agent.Name))
			info.WriteString(fmt.Sprintf("   üÜî ID: %s\n", agent.ID))
			info.WriteString(fmt.Sprintf("   üìä –°—Ç–∞—Ç—É—Å: %s\n", FormatAgentStatus(agent.Status)))
			info.WriteString("\n")
		}
	} else {
		info.WriteString("–ù–µ—Ç –∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ\n")
	}

	return info.String()
}

// formatSystemOrchestrator —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
func formatSystemOrchestrator(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("üß† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n")

	if system.OrchestratorOptions != nil {
		for key, value := range system.OrchestratorOptions {
			info.WriteString(fmt.Sprintf("‚öôÔ∏è %s: %v\n", key, value))
		}
	} else {
		info.WriteString("–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n")
	}

	return info.String()
}

// formatSystemOptions —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–ø—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã
func formatSystemOptions(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("‚öôÔ∏è –û–ø—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:\n\n")

	if system.Options != nil {
		for key, value := range system.Options {
			info.WriteString(fmt.Sprintf("üîß %s: %v\n", key, value))
		}
	} else {
		info.WriteString("–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø—Ü–∏–π\n")
	}

	return info.String()
}

// formatSystemIntegration —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
func formatSystemIntegration(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:\n\n")

	if system.IntegrationOptions != nil {
		for key, value := range system.IntegrationOptions {
			info.WriteString(fmt.Sprintf("‚öôÔ∏è %s: %v\n", key, value))
		}
	} else {
		info.WriteString("–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏\n")
	}

	return info.String()
}

// formatSystemStatistics —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
func formatSystemStatistics(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:\n\n")
	info.WriteString(fmt.Sprintf("ü§ñ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≥–µ–Ω—Ç–æ–≤: %d\n", len(system.Agents)))
	info.WriteString(fmt.Sprintf("üìÖ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: %s\n", system.UpdatedAt.Sub(system.CreatedAt).String()))

	return info.String()
}

// formatSystemUpdates —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
func formatSystemUpdates(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("üîÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö:\n\n")
	info.WriteString(fmt.Sprintf("üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: %s\n", system.UpdatedAt.Format("02.01.2006 15:04:05")))

	if system.UpdatedBy != "" {
		info.WriteString(fmt.Sprintf("üë§ –û–±–Ω–æ–≤–∏–ª: %s\n", system.UpdatedBy))
	}

	return info.String()
}

// formatSystemScaling —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
func formatSystemScaling(system *api.AgentSystem) string {
	var info strings.Builder

	info.WriteString("üìà –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n")

	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ Options
	info.WriteString("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö\n")

	return info.String()
}

// FormatSystemStatus —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∞–≥–µ–Ω—Ç–æ–≤
func FormatSystemStatus(status string) string {
	switch status {
	case "ACTIVE":
		return "üü¢ –ê–∫—Ç–∏–≤–Ω–∞"
	case "SUSPENDED":
		return "üü° –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
	case "ERROR":
		return "üî¥ –û—à–∏–±–∫–∞"
	case "PENDING":
		return "‚è≥ –û–∂–∏–¥–∞–µ—Ç"
	case "CREATING":
		return "üî® –°–æ–∑–¥–∞–µ—Ç—Å—è"
	case "DELETING":
		return "üóëÔ∏è –£–¥–∞–ª—è–µ—Ç—Å—è"
	default:
		return "‚ö™ " + status
	}
}
