package errors

import (
	"fmt"

	"github.com/charmbracelet/log"
)

// ExampleUsage –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
func ExampleUsage() {
	// –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
	handler := NewHandler()

	// –ü—Ä–∏–º–µ—Ä 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
	validationErr := ValidationError("INVALID_EMAIL", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞").
		WithDetails("Email –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª @").
		WithContext("input", "invalid-email")

	fmt.Println("–ü—Ä–∏–º–µ—Ä 1 - –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:")
	fmt.Println(FormatError(validationErr))
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 2: –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –æ—à–∏–±–∫–∏
	originalErr := fmt.Errorf("file not found")
	wrappedErr := handler.WrapFileSystemError(originalErr, "FILE_NOT_FOUND", "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω").
		WithContext("file_path", "/path/to/file.txt").
		WithContext("operation", "read")

	fmt.Println("–ü—Ä–∏–º–µ—Ä 2 - –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:")
	fmt.Println(FormatError(wrappedErr))
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏
	fmt.Println("–ü—Ä–∏–º–µ—Ä 3 - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:")
	suggestions := GetErrorSuggestions(validationErr)
	for i, suggestion := range suggestions {
		fmt.Printf("%d. %s\n", i+1, suggestion)
	}
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 4: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
	fmt.Println("–ü—Ä–∏–º–µ—Ä 4 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:")
	handler.GetLogger().LogAppError(validationErr, "Validation failed during user input")
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–Ω–∏–∫–∏
	fmt.Println("–ü—Ä–∏–º–µ—Ä 5 - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–Ω–∏–∫–∏:")
	defer handler.HandlePanic()

	// –ü—Ä–∏–º–µ—Ä 6: –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
	fmt.Println("–ü—Ä–∏–º–µ—Ä 6 - –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫:")

	configErr := ConfigurationError("MISSING_ENV_VAR", "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è").
		WithDetails("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è IAM_KEY_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

	authErr := AuthenticationError("INVALID_TOKEN", "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏").
		WithDetails("–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

	apiErr := APIError("SERVICE_UNAVAILABLE", "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω").
		WithDetails("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç")

	fmt.Println("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
	fmt.Println(FormatError(configErr))
	fmt.Println()

	fmt.Println("–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:")
	fmt.Println(FormatError(authErr))
	fmt.Println()

	fmt.Println("API:")
	fmt.Println(FormatError(apiErr))
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
	fmt.Println("–ü—Ä–∏–º–µ—Ä 7 - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏:")
	if handler.IsErrorType(validationErr, ErrorTypeValidation) {
		fmt.Println("‚úÖ –≠—Ç–æ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
	}
	if handler.IsErrorSeverity(validationErr, SeverityMedium) {
		fmt.Println("‚úÖ –≠—Ç–æ –æ—à–∏–±–∫–∞ —Å—Ä–µ–¥–Ω–µ–π —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏")
	}
	if handler.IsErrorCode(validationErr, "INVALID_EMAIL") {
		fmt.Println("‚úÖ –≠—Ç–æ –æ—à–∏–±–∫–∞ —Å –∫–æ–¥–æ–º INVALID_EMAIL")
	}
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 8: –£—Å–ø–µ—à–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	fmt.Println("–ü—Ä–∏–º–µ—Ä 8 - –£—Å–ø–µ—à–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
	fmt.Println(FormatSuccess("–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"))
	fmt.Println(FormatInfo("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'make help' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"))
	fmt.Println(FormatWarning("–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"))
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 9: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
	fmt.Println("–ü—Ä–∏–º–µ—Ä 9 - –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º:")
	recoveryFunc := func() {
		fmt.Println("üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ...")
	}

	handler.HandleWithRecovery(validationErr, recoveryFunc)
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä 10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
	fmt.Println("–ü—Ä–∏–º–µ—Ä 10 - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞:")
	handler.SetLogLevel(log.DebugLevel)
	handler.SetLogReportTimestamp(true)
	handler.SetLogReportCaller(true)
	fmt.Println("–õ–æ–≥–≥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏")
}
