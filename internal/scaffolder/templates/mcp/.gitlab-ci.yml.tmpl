stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  DOCKER_LATEST: $CI_REGISTRY_IMAGE:latest

# Кэширование зависимостей Python
cache:
  paths:
    - .cache/pip
  key: $CI_COMMIT_REF_SLUG

before_script:
  - python --version
  - pip install --upgrade pip
  - pip install -r requirements.txt

# Тестирование
test:
  stage: test
  image: python:{{.PythonVersion}}-slim
  script:
    - echo "Запуск тестов..."
    - pip install pytest pytest-cov black flake8 mypy
    - flake8 src/ tests/
    - black --check src/ tests/
    - mypy src/
    - pytest tests/ -v --cov=src --cov-report=xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
      - htmlcov/
    expire_in: 1 week
  only:
    - merge_requests
    - main
    - develop

# Сборка Docker образа
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Сборка Docker образа..."
    - docker build -t $DOCKER_IMAGE .
    - docker build -t $DOCKER_LATEST .
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_LATEST
  only:
    - main
    - develop

# Развертывание в staging
deploy_staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Развертывание в staging..."
    - echo "Docker образ: $DOCKER_IMAGE"
    - echo "Развертывание завершено"
  environment:
    name: staging
    url: https://staging.{{.ProjectName}}.example.com
  only:
    - develop

# Развертывание в production
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Развертывание в production..."
    - echo "Docker образ: $DOCKER_IMAGE"
    - echo "Развертывание завершено"
  environment:
    name: production
    url: https://{{.ProjectName}}.example.com
  when: manual
  only:
    - main
