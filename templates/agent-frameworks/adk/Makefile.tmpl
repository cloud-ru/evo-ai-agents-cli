# {{.ProjectName}} - AI Agent (ADK Framework) Makefile

.PHONY: help install run test lint format build deploy clean docker-build docker-run

# Default target
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è {{.ProjectName}}:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@if [ -f pyproject.toml ]; then \
		echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º uv –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."; \
		uv sync; \
	else \
		echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º pip –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."; \
		pip install -r requirements.txt; \
	fi
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
	@echo "ü§ñ –ó–∞–ø—É—Å–∫ {{.ProjectName}} –∞–≥–µ–Ω—Ç–∞..."
	python -m src.agent

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	pytest tests/ -v

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	flake8 src/ tests/
	mypy src/

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	black src/ tests/
	isort src/ tests/

build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
	@echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	python -m build

deploy: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–µ–∫—Ç
	@echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
	# –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∑–¥–µ—Å—å

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	rm -rf build/ dist/ .coverage htmlcov/

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker build -t {{.ProjectName}} .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker..."
	docker run -p 8000:8000 --env-file .env {{.ProjectName}}

docker-compose-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å docker-compose
	@echo "üê≥ –ó–∞–ø—É—Å–∫ —Å docker-compose..."
	docker-compose up -d

docker-compose-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å docker-compose
	@echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ docker-compose..."
	docker-compose down

# Development targets
dev-install: install ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	pip install -r requirements.txt

dev-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	python -m src.agent

# CI/CD targets
ci-test: test lint ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è CI
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

ci-build: clean build ## –°–æ–±—Ä–∞—Ç—å –¥–ª—è CI
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –¥–ª—è CI –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
