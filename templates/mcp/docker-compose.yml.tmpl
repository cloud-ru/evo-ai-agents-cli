version: '3.8'

services:
  {{.ProjectName}}:
    build: .
    container_name: {{.ProjectName}}
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Опциональные сервисы для разработки
  redis:
    image: redis:7-alpine
    container_name: {{.ProjectName}}-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: {{.ProjectName}}-postgres
    environment:
      POSTGRES_DB: {{.ProjectName}}
      POSTGRES_USER: {{.ProjectName}}
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
