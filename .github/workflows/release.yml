name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Setup GitHub CLI
        uses: actions/setup-gh@v1

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build binaries
        run: |
          VERSION=${{ steps.version.outputs.version }}
          echo "Building version: $VERSION"
          
          # Create release directory
          mkdir -p release
          
          # Build for different platforms
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
          )
          
          for platform in "${platforms[@]}"; do
            IFS='/' read -r os arch <<< "$platform"
            echo "Building for $os/$arch..."
            
            output_name="ai-agents-cli"
            if [ "$os" = "windows" ]; then
              output_name+=".exe"
            fi
            
            GOOS=$os GOARCH=$arch go build \
              -ldflags "-X main.Version=$VERSION -X main.BuildTime=$(date -u +%Y-%m-%d_%H:%M:%S) -X main.GitCommit=$(git rev-parse --short HEAD)" \
              -o "release/ai-agents-cli-$os-$arch$([ "$os" = "windows" ] && echo ".exe")" .
          done

      - name: Create archives
        run: |
          cd release
          
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
          )
          
          for platform in "${platforms[@]}"; do
            IFS='/' read -r os arch <<< "$platform"
            archive_name="ai-agents-cli-$os-$arch"
            
            if [ "$os" = "windows" ]; then
              zip -r "$archive_name.zip" "ai-agents-cli-$os-$arch.exe"
            else
              tar -czf "$archive_name.tar.gz" "ai-agents-cli-$os-$arch"
            fi
          done

      - name: Generate checksums
        run: |
          cd release
          sha256sum *.tar.gz *.zip > checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: AI Agents CLI ${{ steps.version.outputs.version }}
          body: |
            # AI Agents CLI ${{ steps.version.outputs.version }}
            
            ## üöÄ What's New
            
            - Full support for MCP servers management
            - AI agents and agent systems management
            - CI/CD integration with validation and monitoring
            - Beautiful colored interface with emojis
            - Support for YAML and JSON configurations
            - Multi-language support (Russian, English)
            
            ## üì¶ Installation
            
            ### Using winget (Windows)
            ```bash
            winget install CloudRu.AIAgentsCLI
            ```
            
            ### Using Homebrew (macOS/Linux)
            ```bash
            brew install cloudru/ai-agents-cli/ai-agents-cli
            ```
            
            ### Manual Installation
            Download the appropriate binary for your platform from the assets below.
            
            ## üîß Quick Start
            
            1. Set your API key: `export API_KEY="your-api-key"`
            2. Set your project ID: `export PROJECT_ID="your-project-id"`
            3. Run: `ai-agents-cli --help`
            
            ## üìö Documentation
            
            - [README](https://github.com/${{ github.repository }}/blob/main/README.md)
            - [Examples](https://github.com/${{ github.repository }}/tree/main/examples)
            - [CI/CD Integration](https://github.com/${{ github.repository }}/tree/main/examples/.github/workflows)
            
            ## üêõ Bug Reports
            
            Please report bugs in the [Issues](https://github.com/${{ github.repository }}/issues) section.
            
            ## üìÑ License
            
            MIT License - see [LICENSE](https://github.com/${{ github.repository }}/blob/main/LICENSE) for details.
          files: |
            release/*.tar.gz
            release/*.zip
            release/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update winget manifest
        if: success()
        run: |
          # This would typically update the winget manifest in a separate repository
          echo "Winget manifest update would go here"
          echo "Repository: winget-pkgs"
          echo "Package: CloudRu.AIAgentsCLI"
          echo "Version: ${{ steps.version.outputs.version }}"

      - name: Update Homebrew formula
        if: success()
        run: |
          # This would typically update the Homebrew formula in a separate repository
          echo "Homebrew formula update would go here"
          echo "Repository: homebrew-ai-agents-cli"
          echo "Formula: ai-agents-cli.rb"
          echo "Version: ${{ steps.version.outputs.version }}"
